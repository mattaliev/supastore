# Generated by Django 5.0.2 on 2024-05-20 07:31

from django.db import migrations


def create_default_store(apps, schema_editor):
    Store = apps.get_model("store", "Store")
    Event = apps.get_model("analytics", "Event")
    Cart = apps.get_model("cart", "Cart")
    Product = apps.get_model("product", "Product")
    Order = apps.get_model("order", "Order")
    PaymentMethod = apps.get_model("payment", "PaymentMethod")
    UserBotState = apps.get_model("telegram", "UserBotState")
    TelegramUser = apps.get_model("user", "TelegramUser")
    StoreUser = apps.get_model("user", "StoreUser")

    default_store = Store.objects.create(
        store_name="DITCH Concept Store",
        store_description="DITCH Concept Store Description"
    )

    Event.objects.filter(store=None).update(store=default_store)
    Cart.objects.filter(store=None).update(store=default_store)
    Product.objects.filter(store=None).update(store=default_store)
    Order.objects.filter(store=None).update(store=default_store)
    PaymentMethod.objects.filter(store=None).update(store=default_store)
    UserBotState.objects.filter(store=None).update(store=default_store)

    for user in TelegramUser.objects.all():
        StoreUser.objects.create(user=user, store=default_store)

    tanya = StoreUser.objects.filter(user__username="tanyalayko").first()

    if tanya:
        tanya.role = "ADMIN"
        tanya.save()

    matvey = StoreUser.objects.filter(user__username="matveyaliev").first()

    if matvey:
        matvey.role = "OWNER"
        matvey.save()


class Migration(migrations.Migration):

    dependencies = [
        ('store', '0004_remove_store_owner_store_bot_username_and_more'),
        ('analytics', '0004_event_store'),
        ('cart', '0004_cart_store'),
        ('order', '0025_order_store'),
        ('payment', '0012_paymentmethod_store'),
        ('product', '0006_product_store'),
        ('telegram', '0002_userbotstate_store'),
        ('user', '0008_alter_telegramuser_role_storeuser'),
    ]

    operations = [
        migrations.RunPython(create_default_store, reverse_code=migrations.RunPython.noop),
    ]
