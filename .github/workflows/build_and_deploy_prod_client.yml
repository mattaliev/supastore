# Pretty much the same as the staging workflow, except the environment is now production
# Those workflows need to have 2 separate build stage because there are
# different environment variables for the production and staging environment
name: Build and Deploy Telegram Frontend to Google Cloud Run


on:
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GOOGLE_CLOUD_PROJECT }}
  GOOGLE_CLOUD_SA_KEY: ${{ secrets.GOOGLE_CLOUD_SA_KEY }}
  SERVICE_NAME: ditch-tg # Change to your service name
  IMAGE: asia-southeast1-docker.pkg.dev/${{ secrets.GOOGLE_CLOUD_PROJECT }}/ditch/ditch-tg # Change to your image name
  REGION: asia-southeast1 # Change to your Google Cloud region

jobs:
  setup-build-and-deploy-frontend:
    environment: deployment
    name: Setup, Build, Publish and Deploy Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: benjlevesque/short-sha@v3.0
        id: short-sha
        with:
          length: 6

      - run: echo $SHA
        env:
          SHA: ${{ steps.short-sha.outputs.sha }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - id: auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CLOUD_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ secrets.GOOGLE_CLOUD_PROJECT }}

      - name: Login to GAR
        uses: docker/login-action@v3
        with:
          registry: asia-southeast1-docker.pkg.dev
          username: _json_key
          password: ${{ secrets.GOOGLE_CLOUD_SA_KEY }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: ./
          file: ./apps/tg-shop/Dockerfile
          tags: |
            ${{ env.IMAGE }}:${{ env.SHA }}
            ${{ env.IMAGE }}:latest
          build-args: |
            NEXT_PUBLIC_API_URL=${{ secrets.BACKEND_SERVICE_URL }}
            NEXT_PUBLIC_GOOGLE_PLACES_API_KEY=${{ secrets.GOOGLE_PLACES_API_KEY }}


      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --quiet \
            --image ${{ env.IMAGE }}:latest \
            --region ${{ env.REGION }} \
            --platform managed \
            --format json \
            --allow-unauthenticated \
            --service-account ${{ secrets.GOOGLE_CLOUD_SA_EMAIL }} 
